import os
import requests
import hashlib
from tkinter import Tk, messagebox, filedialog, Toplevel, Label, StringVar, IntVar
from tkinter.ttk import Progressbar

# JBXCloud API endpoint
API_URL = 'https://api.jbxcloud.com/v1/file/analysis'

# Your JBXCloud API key
API_KEY = 'your_api_key_here'

def calculate_md5(file_path):
    """
    Calculate the MD5 hash of a file
    """
    hash_md5 = hashlib.md5()
    with open(file_path, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_md5.update(chunk)
    return hash_md5.hexdigest()

def check_file(file_path, progress_var):
    """
    Check a file for malware by sending it to JBXCloud
    """
    # Calculate the file's MD5 hash
    file_hash = calculate_md5(file_path)

    # Prepare the headers for the request
    headers = {
        'Authorization': 'Bearer ' + API_KEY,
        'Content-Type': 'application/json'
    }

    # Prepare the data for the request
    data = {
        'hash': file_hash
    }

    # Send the request to JBXCloud
    response = requests.post(API_URL, headers=headers, json=data)

    # If the request was successful
    if response.status_code == 200:
        # Parse the response JSON
        response_json = response.json()

        # If the file is malicious
        if response_json['malicious']:
            messagebox.showwarning("Malware Detected", f'WARNING: The file {file_path} is malicious!')
        else:
            messagebox.showinfo("Safe File", f'The file {file_path} is safe.')
    else:
        messagebox.showerror("Error", f'Error: {response.status_code}')

    # Update the progress bar
    progress_var.set(progress_var.get() + 1)

def select_directory():
    """
    Open a directory dialog and check all files in the selected directory for malware
    """
    # Open a directory dialog
    Tk().withdraw() # we don't want a full GUI, so keep the root window from appearing
    directory_path = filedialog.askdirectory() # show an "Open" dialog box and return the path to the selected directory

    # If a directory was selected
    if directory_path:
        # Get a list of all files in the directory
        file_paths = [os.path.join(root, file) for root, dirs, files in os.walk(directory_path) for file in files]

        # Create a new window for the progress bar
        progress_window = Toplevel()
        progress_window.title("Scanning Files")

        # Create a StringVar to hold the progress text
        progress_text = StringVar()
        progress_text.set("Scanning 0 out of " + str(len(file_paths)) + " files...")

        # Create a label for the progress text
        progress_label = Label(progress_window, textvariable=progress_text)
        progress_label.pack()

        # Create a Progressbar
        progress_var = IntVar()
        progress_bar = Progressbar(progress_window, length=500, mode='determinate', variable=progress_var, maximum=len(file_paths))
        progress_bar.pack()

        # Function to update the progress text
        def update_progress_text():
            progress_text.set("Scanning " + str(progress_var.get()) + " out of " + str(len(file_paths)) + " files...")

        # Bind the progress_var to the update_progress_text function
        progress_var.trace("w", lambda name, index, mode, progress_var=progress_var: update_progress_text())

        # Check each file for malware
        for file_path in file_paths:
            check_file(file_path, progress_var)

# Example usage
select_directory()
